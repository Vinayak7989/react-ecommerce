{"version":3,"file":"static/js/625.345e24e6.chunk.js","mappings":"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","sources":["components/forms/FileUpload.js","components/nav/AdminNav.js","functions/category.js","functions/product.js","components/forms/ProductUpdateForm.js","pages/admin/product/ProductUpdate.js"],"sourcesContent":["import React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar, Badge } from \"antd\";\n\nconst FileUpload = ({ values, setValues, setLoading }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n\n  const fileUploadAndResize = (e) => {\n    // console.log(e.target.files);\n    // resize\n    let files = e.target.files; // 3\n    let allUploadedFiles = values.images;\n\n    if (files) {\n      setLoading(true);\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(\n          files[i],\n          720,\n          720,\n          \"JPEG\",\n          100,\n          0,\n          (uri) => {\n            // console.log(uri);\n            axios\n              .post(\n                `${process.env.REACT_APP_API}/uploadimages`,\n                { image: uri },\n                {\n                  headers: {\n                    authtoken: user ? user.token : \"\",\n                  },\n                }\n              )\n              .then((res) => {\n                console.log(\"IMAGE UPLOAD RES DATA\", res);\n                setLoading(false);\n                allUploadedFiles.push(res.data);\n\n                setValues({ ...values, images: allUploadedFiles });\n              })\n              .catch((err) => {\n                setLoading(false);\n                console.log(\"CLOUDINARY UPLOAD ERR\", err);\n              });\n          },\n          \"base64\"\n        );\n      }\n    }\n    // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n  };\n\n  const handleImageRemove = (public_id) => {\n    setLoading(true);\n    // console.log(\"remove image\", public_id);\n    axios\n      .post(\n        `${process.env.REACT_APP_API}/removeimage`,\n        { public_id },\n        {\n          headers: {\n            authtoken: user ? user.token : \"\",\n          },\n        }\n      )\n      .then((res) => {\n        setLoading(false);\n        const { images } = values;\n        let filteredImages = images.filter((item) => {\n          return item.public_id !== public_id;\n        });\n        setValues({ ...values, images: filteredImages });\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        {values.images &&\n          values.images.map((image) => (\n            <Badge\n              count=\"X\"\n              key={image.public_id}\n              onClick={() => handleImageRemove(image.public_id)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <Avatar\n                src={image.url}\n                size={100}\n                shape=\"square\"\n                className=\"ml-3\"\n              />\n            </Badge>\n          ))}\n      </div>\n      <div className=\"row\">\n        <label className=\"btn btn-primary btn-raised mt-3\">\n          Choose File\n          <input\n            type=\"file\"\n            multiple\n            hidden\n            accept=\"images/*\"\n            onChange={fileUploadAndResize}\n          />\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default FileUpload;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminNav = () => (\n  <nav>\n    <ul className=\"nav flex-column\">\n      <li className=\"nav-item\">\n        <Link to=\"/admin/dashboard\" className=\"nav-link\">\n          Dashboard\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/admin/product\" className=\"nav-link\">\n          Product\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/admin/products\" className=\"nav-link\">\n          Products\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/admin/category\" className=\"nav-link\">\n          Category\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/admin/sub\" className=\"nav-link\">\n          Sub Category\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/admin/coupon\" className=\"nav-link\">\n          Coupon\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/user/password\" className=\"nav-link\">\n          Password\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default AdminNav;\n","import axios from \"axios\";\n\nexport const getCategories = async () =>\n  await axios.get(`${process.env.REACT_APP_API}/categories`);\n\nexport const getCategory = async (slug) =>\n  await axios.get(`${process.env.REACT_APP_API}/category/${slug}`);\n\nexport const removeCategory = async (slug, authtoken) =>\n  await axios.delete(`${process.env.REACT_APP_API}/category/${slug}`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const updateCategory = async (slug, category, authtoken) =>\n  await axios.put(`${process.env.REACT_APP_API}/category/${slug}`, category, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const createCategory = async (category, authtoken) =>\n  await axios.post(`${process.env.REACT_APP_API}/category`, category, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const getCategorySubs = async (_id) =>\n  await axios.get(`${process.env.REACT_APP_API}/category/subs/${_id}`);\n","import axios from \"axios\";\n\nexport const createProduct = async (product, authtoken) =>\n  await axios.post(`${process.env.REACT_APP_API}/product`, product, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const getProductsByCount = async (count) =>\n  await axios.get(`${process.env.REACT_APP_API}/products/${count}`);\n\nexport const removeProduct = async (slug, authtoken) =>\n  await axios.delete(`${process.env.REACT_APP_API}/product/${slug}`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const getProduct = async (slug) =>\n  await axios.get(`${process.env.REACT_APP_API}/product/${slug}`);\n\nexport const updateProduct = async (slug, product, authtoken) =>\n  await axios.put(`${process.env.REACT_APP_API}/product/${slug}`, product, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const getProducts = async (sort, order, page) =>\n  await axios.post(`${process.env.REACT_APP_API}/products`, {\n    sort,\n    order,\n    page,\n  });\n\nexport const getProductsCount = async () =>\n  await axios.get(`${process.env.REACT_APP_API}/products/total`);\n\nexport const productStar = async (productId, star, authtoken) =>\n  await axios.put(\n    `${process.env.REACT_APP_API}/product/star/${productId}`,\n    { star },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const getRelated = async (productId) =>\n  await axios.get(`${process.env.REACT_APP_API}/product/related/${productId}`);\n\nexport const fetchProductsByFilter = async (arg) =>\n  await axios.post(`${process.env.REACT_APP_API}/search/filters`, arg);\n","import React from \"react\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nconst ProductUpdateForm = ({\n  handleSubmit,\n  handleChange,\n  setValues,\n  values,\n  handleCategoryChange,\n  categories,\n  subOptions,\n  arrayOfSubs,\n  setArrayOfSubs,\n  selectedCategory,\n}) => {\n  // destructure\n  const {\n    title,\n    description,\n    price,\n    category,\n    subs,\n    shipping,\n    quantity,\n    images,\n    colors,\n    brands,\n    color,\n    brand,\n  } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label>Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          className=\"form-control\"\n          value={title}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Description</label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          className=\"form-control\"\n          value={description}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Price</label>\n        <input\n          type=\"number\"\n          name=\"price\"\n          className=\"form-control\"\n          value={price}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Shipping</label>\n        <select\n          value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\n          name=\"shipping\"\n          className=\"form-control\"\n          onChange={handleChange}\n        >\n          <option value=\"No\">No</option>\n          <option value=\"Yes\">Yes</option>\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Quantity</label>\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          className=\"form-control\"\n          value={quantity}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Color</label>\n        <select\n          value={color}\n          name=\"color\"\n          className=\"form-control\"\n          onChange={handleChange}\n        >\n          {colors.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Brand</label>\n        <select\n          value={brand}\n          name=\"brand\"\n          className=\"form-control\"\n          onChange={handleChange}\n        >\n          {brands.map((b) => (\n            <option key={b} value={b}>\n              {b}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Category</label>\n        <select\n          name=\"category\"\n          className=\"form-control\"\n          onChange={handleCategoryChange}\n          value={selectedCategory ? selectedCategory : category._id}\n        >\n          {categories.length > 0 &&\n            categories.map((c) => (\n              <option key={c._id} value={c._id}>\n                {c.name}\n              </option>\n            ))}\n        </select>\n      </div>\n\n      <div>\n        <label>Sub Categories</label>\n        <Select\n          mode=\"multiple\"\n          style={{ width: \"100%\" }}\n          placeholder=\"Please select\"\n          value={arrayOfSubs}\n          onChange={(value) => setArrayOfSubs(value)}\n        >\n          {subOptions.length &&\n            subOptions.map((s) => (\n              <Option key={s._id} value={s._id}>\n                {s.name}\n              </Option>\n            ))}\n        </Select>\n      </div>\n\n      <br />\n      <button className=\"btn btn-outline-info\">Save</button>\n    </form>\n  );\n};\n\nexport default ProductUpdateForm;\n","import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getProduct, updateProduct } from \"../../../functions/product\";\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\nimport FileUpload from \"../../../components/forms/FileUpload\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\n\nconst initialState = {\n  title: \"\",\n  description: \"\",\n  price: \"\",\n  category: \"\",\n  subs: [],\n  shipping: \"\",\n  quantity: \"\",\n  images: [],\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\n  brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Lenovo\", \"ASUS\"],\n  color: \"\",\n  brand: \"\",\n};\n\nconst ProductUpdate = ({ match, history }) => {\n  // state\n  const [values, setValues] = useState(initialState);\n  const [categories, setCategories] = useState([]);\n  const [subOptions, setSubOptions] = useState([]);\n  const [arrayOfSubs, setArrayOfSubs] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n  // router\n  const { slug } = match.params;\n\n  useEffect(() => {\n    loadProduct();\n    loadCategories();\n  }, []);\n\n  const loadProduct = () => {\n    getProduct(slug).then((p) => {\n      // console.log(\"single product\", p);\n      // 1 load single proudct\n      setValues({ ...values, ...p.data });\n      // 2 load single product category subs\n      getCategorySubs(p.data.category._id).then((res) => {\n        setSubOptions(res.data); // on first load, show default subs\n      });\n      // 3 prepare array of sub ids to show as default sub values in antd Select\n      let arr = [];\n      p.data.subs.map((s) => {\n        arr.push(s._id);\n      });\n      console.log(\"ARR\", arr);\n      setArrayOfSubs((prev) => arr); // required for ant design select to work\n    });\n  };\n\n  const loadCategories = () =>\n    getCategories().then((c) => {\n      console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\n      setCategories(c.data);\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    values.subs = arrayOfSubs;\n    values.category = selectedCategory ? selectedCategory : values.category;\n\n    updateProduct(slug, values, user.token)\n      .then((res) => {\n        setLoading(false);\n        toast.success(`\"${res.data.title}\" is updated`);\n        history.push(\"/admin/products\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        toast.error(err.response.data.err);\n      });\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n    // console.log(e.target.name, \" ----- \", e.target.value);\n  };\n\n  const handleCategoryChange = (e) => {\n    e.preventDefault();\n    console.log(\"CLICKED CATEGORY\", e.target.value);\n    setValues({ ...values, subs: [] });\n\n    setSelectedCategory(e.target.value);\n\n    getCategorySubs(e.target.value).then((res) => {\n      console.log(\"SUB OPTIONS ON CATGORY CLICK\", res);\n      setSubOptions(res.data);\n    });\n\n    console.log(\"EXISTING CATEGORY values.category\", values.category);\n\n    // if user clicks back to the original category\n    // show its sub categories in default\n    if (values.category._id === e.target.value) {\n      loadProduct();\n    }\n    // clear old sub category ids\n    setArrayOfSubs([]);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <AdminNav />\n        </div>\n\n        <div className=\"col-md-10\">\n          {loading ? (\n            <LoadingOutlined className=\"text-danger h1\" />\n          ) : (\n            <h4>Product update</h4>\n          )}\n\n          {/* {JSON.stringify(values)} */}\n\n          <div className=\"p-3\">\n            <FileUpload\n              values={values}\n              setValues={setValues}\n              setLoading={setLoading}\n            />\n          </div>\n\n          <ProductUpdateForm\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n            setValues={setValues}\n            values={values}\n            handleCategoryChange={handleCategoryChange}\n            categories={categories}\n            subOptions={subOptions}\n            arrayOfSubs={arrayOfSubs}\n            setArrayOfSubs={setArrayOfSubs}\n            selectedCategory={selectedCategory}\n          />\n          <hr />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductUpdate;\n"],"names":["values","setValues","setLoading","user","useSelector","state","className","images","map","image","count","onClick","public_id","axios","process","headers","authtoken","token","then","res","filteredImages","filter","item","catch","err","console","log","style","cursor","src","url","size","shape","type","multiple","hidden","accept","onChange","e","files","target","allUploadedFiles","i","length","Resizer","uri","push","data","to","getCategories","getCategory","slug","removeCategory","updateCategory","category","createCategory","getCategorySubs","_id","createProduct","product","getProductsByCount","removeProduct","getProduct","updateProduct","getProducts","sort","order","page","getProductsCount","productStar","productId","star","getRelated","fetchProductsByFilter","arg","Option","Select","handleSubmit","handleChange","handleCategoryChange","categories","subOptions","arrayOfSubs","setArrayOfSubs","selectedCategory","title","description","price","shipping","subs","quantity","colors","brands","color","brand","onSubmit","name","value","c","b","mode","width","placeholder","s","initialState","match","history","useState","setCategories","setSubOptions","setSelectedCategory","loading","params","useEffect","loadProduct","loadCategories","p","arr","prev","AdminNav","LoadingOutlined","FileUpload","preventDefault","toast","response"],"sourceRoot":""}