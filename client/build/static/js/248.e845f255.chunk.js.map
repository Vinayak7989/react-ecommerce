{"version":3,"file":"static/js/248.e845f255.chunk.js","mappings":"kOA2BA,UArBmB,SAAC,GAA0B,EAAxBA,SAAyB,IAAZC,GAAW,YACpCC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,EAAjB,IAArBF,KACR,GAAoBG,EAAAA,EAAAA,WAAS,GAA7B,eAAOC,EAAP,KAAWC,EAAX,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACJN,GAAQA,EAAKO,QACfC,EAAAA,EAAAA,IAAaR,EAAKO,OACfE,MAAK,SAACC,GACLC,QAAQC,IAAI,oBAAqBF,GACjCL,GAAM,EACP,IACAQ,OAAM,SAACC,GACNH,QAAQC,IAAI,kBAAmBE,GAC/BT,GAAM,EACP,GAEN,GAAE,CAACL,IAEGI,GAAK,SAAC,MAAD,UAAWL,KAAW,SAAC,IAAD,GACnC,C,wECDD,IArB0B,WACxB,OAA0BI,EAAAA,EAAAA,UAAS,GAAnC,eAAOY,EAAP,KAAcC,EAAd,KACIC,GAAUC,EAAAA,EAAAA,MAYd,OAVAZ,EAAAA,EAAAA,YAAU,WACR,IAAMa,EAAWC,aAAY,WAC3BJ,GAAS,SAACK,GAAD,QAAoBA,CAApB,GACV,GAAE,KAIH,OAFU,IAAVN,GAAeE,EAAQK,KAAK,KAErB,kBAAMC,cAAcJ,EAApB,CACR,GAAE,CAACJ,EAAOE,KAGT,gBAAKO,UAAU,4BAAf,UACE,+CAAuBT,EAAvB,eAGL,C","sources":["components/routes/AdminRoute.js","components/routes/LoadingToRedirect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\nimport { currentAdmin } from \"../../functions/auth\";\n\nconst AdminRoute = ({ children, ...rest }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n  const [ok, setOk] = useState(false);\n\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token)\n        .then((res) => {\n          console.log(\"CURRENT ADMIN RES\", res);\n          setOk(true);\n        })\n        .catch((err) => {\n          console.log(\"ADMIN ROUTE ERR\", err);\n          setOk(false);\n        });\n    }\n  }, [user]);\n\n  return ok ? <Route {...rest} /> : <LoadingToRedirect />;\n};\n\nexport default AdminRoute;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoadingToRedirect = () => {\n  const [count, setCount] = useState(5);\n  let history = useHistory();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((currentCount) => --currentCount);\n    }, 1000);\n    // redirect once count is equal to 0\n    count === 0 && history.push(\"/\");\n    // cleanup\n    return () => clearInterval(interval);\n  }, [count, history]);\n\n  return (\n    <div className=\"container p-5 text-center\">\n      <p>Redirecting you in {count} seconds</p>\n    </div>\n  );\n};\n\nexport default LoadingToRedirect;\n"],"names":["children","rest","user","useSelector","state","useState","ok","setOk","useEffect","token","currentAdmin","then","res","console","log","catch","err","count","setCount","history","useHistory","interval","setInterval","currentCount","push","clearInterval","className"],"sourceRoot":""}